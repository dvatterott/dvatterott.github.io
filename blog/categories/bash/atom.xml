<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bash | Dan Vatterott]]></title>
  <link href="https://danvatterott.com/blog/categories/bash/atom.xml" rel="self"/>
  <link href="https://danvatterott.com/"/>
  <updated>2019-04-20T18:59:58-05:00</updated>
  <id>https://danvatterott.com/</id>
  <author>
    <name><![CDATA[Dan Vatterott]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Are Some Mlb Players More Likely to Hit Into Errors Than Others?]]></title>
    <link href="https://danvatterott.com/blog/2019/04/19/are-some-mlb-players-more-likely-to-hit-into-errors-than-others/"/>
    <updated>2019-04-19T11:02:56-05:00</updated>
    <id>https://danvatterott.com/blog/2019/04/19/are-some-mlb-players-more-likely-to-hit-into-errors-than-others</id>
    <content type="html"><![CDATA[<p>I recently found myself wondering if some baseball players are more likely to hit into errors than others. In theory, the answer should be “no” since fielders produce errors regardless of who is hitting. Nonetheless, it’s also possible that some hitters “force” errors by hitting the ball harder or running to first base faster.</p>

<p>In order to evaluate this possibility, I found play-by-play data on <a href="https://www.retrosheet.org/">retrosheet.org</a>. This data contains row by row data describing each event (e.g., a hit, stolen base etc) in a baseball game. I’ve posted this analysis on <a href="https://github.com/dvatterott/mlb_errors">github</a> and will walk through it here.</p>

<p>The user is expected to input what year’s data they want. I write the code’s output for the year 2018 as comments. The code starts by downloading and unzipping the data.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">YEAR</span><span class="o">=</span><span class="nv">$1</span>
</span><span class='line'><span class="nv">FILE_LOC</span><span class="o">=</span>https://www.retrosheet.org/events/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>eve.zip&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;echo “———DOWNLOAD———-“
</span><span class='line'>wget <span class="nv">$FILE_LOC</span> -O ./raw_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>.zip&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;echo “———UNPACK———-“
</span><span class='line'>mkdir raw_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/
</span><span class='line'>unzip -o raw_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>.zip -d raw_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/
</span></code></pre></td></tr></table></div></figure></p>

<p>The unzipped data contain play-by-play data in files with the EVN or EVA extensions. Each team’s home stadium has its own file. I combine all the play-by play events (.EVN and .EVA files) into a single file. I then remove all non batting events (e.g., balk, stolen base etc).</p>

<p>I also combine all the roster files (.ROS) into a single file.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># export playbyplay to single file</span>
</span><span class='line'>mkdir processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/
</span><span class='line'>find raw_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/ -regex ‘.*EV<span class="o">[</span>A<span class="p">|</span>N<span class="o">]</span>’ <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	xargs grep play <span class="p">&amp;</span>gt<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>	./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/playbyplay.out&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;get-all-plate-appearances-from-data-and-hitter-remove-all-non-plate-appearance-rows&quot;</span>&gt;get all plate appearances from data <span class="o">(</span>and hitter<span class="o">)</span>. remove all non plate appearance rows&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;cat ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/playbyplay.out <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	awk -F’,’ ‘<span class="o">{</span>print <span class="nv">$4</span>”,”<span class="nv">$7</span><span class="o">}</span>’ <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	grep -Ev ‘,<span class="o">(</span>NP<span class="p">|</span>BK<span class="p">|</span>CS<span class="p">|</span>DI<span class="p">|</span>OA<span class="p">|</span>PB<span class="p">|</span>WP<span class="p">|</span>PO<span class="p">|</span>POCS<span class="p">|</span>SB<span class="o">)</span>’ <span class="p">&amp;</span>gt<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>	./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/batters.out&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;one-giant-roster-file&quot;</span>&gt;one giant roster file&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;find raw_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/ -name ‘*ROS’ <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	xargs awk -F’,’ ‘<span class="o">{</span>print <span class="nv">$1</span>” “<span class="nv">$2</span>” “<span class="nv">$3</span><span class="o">}</span>’ <span class="p">&amp;</span>gt<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>	./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/players.out
</span></code></pre></td></tr></table></div></figure></p>

<p>In this next few code blocks I print some data just to see what I am working with. For instance, I print out players with the most plate appearances. I was able to confirm these numbers with <a href="https://baseball-reference.com">baseball-reference</a>. This operation requires me to groupby player and count the rows. I join this file with the roster file to get player’s full names.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> “———PLAYERS WITH MOST PLATE APPEARANCES———-“
</span><span class='line'>cat ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/batters.out <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	awk -F, ‘<span class="o">{</span>a<span class="o">[</span><span class="nv">$1</span><span class="o">]</span>++<span class="p">;</span><span class="o">}</span>END<span class="o">{</span><span class="k">for</span> <span class="o">(</span>i in a<span class="o">)</span>print i, a<span class="o">[</span>i<span class="o">]</span><span class="p">;</span><span class="o">}</span>’ <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	sort -k2 -nr <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	head <span class="p">&amp;</span>gt<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>	./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/most_pa.out
</span><span class='line'>join <span class="p">&amp;</span>lt<span class="p">;</span><span class="o">(</span>sort -k <span class="m">1</span> ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/players.out<span class="o">)</span> <span class="p">&amp;</span>lt<span class="p">;</span><span class="o">(</span>sort -k <span class="m">1</span> ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/most_pa.out<span class="o">)</span> <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	uniq <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	sort -k <span class="m">4</span> -nr <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	head <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	awk ‘<span class="o">{</span>print <span class="nv">$3</span>”, “<span class="nv">$2</span>”, “<span class="nv">$4</span><span class="o">}</span>’&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;players-with-most-plate-appearances----------&quot;</span>&gt;———PLAYERS WITH MOST PLATE APPEARANCES———-&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;#Francisco, Lindor, 745
</span><span class='line'><span class="c">#Trea, Turner, 740</span>
</span><span class='line'><span class="c">#Manny, Machado, 709</span>
</span><span class='line'><span class="c">#Cesar, Hernandez, 708</span>
</span><span class='line'><span class="c">#Whit, Merrifield, 707</span>
</span><span class='line'><span class="c">#Freddie, Freeman, 707</span>
</span><span class='line'><span class="c">#Giancarlo, Stanton, 706</span>
</span><span class='line'><span class="c">#Nick, Markakis, 705</span>
</span><span class='line'><span class="c">#Alex, Bregman, 705</span>
</span><span class='line'><span class="c">#Marcus, Semien, 703</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Here’s the players with the most hits. Notice that I filter out all non-hits in the grep, then group by player.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> “———PLAYERS WITH MOST HITS———-“
</span><span class='line'>cat ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/batters.out <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	grep -E ‘,<span class="o">(</span>S<span class="p">|</span>D<span class="p">|</span>T<span class="p">|</span>HR<span class="o">)</span>’ <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	awk -F, ‘<span class="o">{</span>a<span class="o">[</span><span class="nv">$1</span><span class="o">]</span>++<span class="p">;</span><span class="o">}</span>END<span class="o">{</span><span class="k">for</span> <span class="o">(</span>i in a<span class="o">)</span>print i, a<span class="o">[</span>i<span class="o">]</span><span class="p">;</span><span class="o">}</span>’ <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	sort -k2 -nr <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	head&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;players-with-most-hits----------&quot;</span>&gt;———PLAYERS WITH MOST HITS———-&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;#merrw001 192
</span><span class='line'><span class="c">#freef001 191</span>
</span><span class='line'><span class="c">#martj006 188</span>
</span><span class='line'><span class="c">#machm001 188</span>
</span><span class='line'><span class="c">#yelic001 187</span>
</span><span class='line'><span class="c">#markn001 185</span>
</span><span class='line'><span class="c">#castn001 185</span>
</span><span class='line'><span class="c">#lindf001 183</span>
</span><span class='line'><span class="c">#peraj003 182</span>
</span><span class='line'><span class="c">#blacc001 182</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Here’s the players with the most at-bats.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> “———PLAYERS WITH MOST AT BATS———-“
</span><span class='line'>cat ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/batters.out <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	grep -Ev ‘SF<span class="p">|</span>SH’ <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	grep -E ‘,<span class="o">(</span>S<span class="p">|</span>D<span class="p">|</span>T<span class="p">|</span>HR<span class="p">|</span>K<span class="p">|</span><span class="o">[</span>0-9<span class="o">]</span><span class="p">|</span>E<span class="p">|</span>DGR<span class="p">|</span>FC<span class="o">)</span>’ <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	awk -F, ‘<span class="o">{</span>a<span class="o">[</span><span class="nv">$1</span><span class="o">]</span>++<span class="p">;</span><span class="o">}</span>END<span class="o">{</span><span class="k">for</span> <span class="o">(</span>i in a<span class="o">)</span>print i, a<span class="o">[</span>i<span class="o">]</span><span class="p">;</span><span class="o">}</span>’ <span class="p">&amp;</span>gt<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>	./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/abs.out
</span><span class='line'>cat ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/abs.out <span class="p">|</span> sort -k2 -nr <span class="p">|</span> head&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;players-with-most-at-bats----------&quot;</span>&gt;———PLAYERS WITH MOST AT BATS———-&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;#turnt001 664
</span><span class='line'><span class="c">#lindf001 661</span>
</span><span class='line'><span class="c">#albio001 639</span>
</span><span class='line'><span class="c">#semim001 632</span>
</span><span class='line'><span class="c">#peraj003 632</span>
</span><span class='line'><span class="c">#merrw001 632</span>
</span><span class='line'><span class="c">#machm001 632</span>
</span><span class='line'><span class="c">#blacc001 626</span>
</span><span class='line'><span class="c">#markn001 623</span>
</span><span class='line'><span class="c">#castn001 620</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>And, finally, here’s the players who hit into the most errors.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> “———PLAYERS WHO HIT INTO THE MOST ERRORS———-“
</span><span class='line'>cat ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/batters.out <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	grep ‘,E<span class="o">[</span>0-9<span class="o">]</span>’ <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	awk -F, ‘<span class="o">{</span>a<span class="o">[</span><span class="nv">$1</span><span class="o">]</span>++<span class="p">;</span><span class="o">}</span>END<span class="o">{</span><span class="k">for</span> <span class="o">(</span>i in a<span class="o">)</span>print i, a<span class="o">[</span>i<span class="o">]</span><span class="p">;</span><span class="o">}</span>’ <span class="p">&amp;</span>gt<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>	./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/errors.out
</span><span class='line'>cat ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/errors.out <span class="p">|</span> sort -k2 -nr <span class="p">|</span> head&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;players-who-hit-into-the-most-errors----------&quot;</span>&gt;———PLAYERS WHO HIT INTO THE MOST ERRORS———-&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;#gurry001 13
</span><span class='line'><span class="c">#casts001 13</span>
</span><span class='line'><span class="c">#baezj001 12</span>
</span><span class='line'><span class="c">#goldp001 11</span>
</span><span class='line'><span class="c">#desmi001 11</span>
</span><span class='line'><span class="c">#castn001 10</span>
</span><span class='line'><span class="c">#bogax001 10</span>
</span><span class='line'><span class="c">#andum001 10</span>
</span><span class='line'><span class="c">#turnt001 9</span>
</span><span class='line'><span class="c">#rojam002 9</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Because players with more at-bats hit into more errors, I need to take the number of at-bats into account. I also filter out all players with less than 250 at bats. I figure we only want players with lots of opportunities to create errors.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> “———PLAYERS WITH MOST ERRORS PER AT BAT———-“
</span><span class='line'>join <span class="p">&amp;</span>lt<span class="p">;</span><span class="o">(</span>sort -k <span class="m">1</span> ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/abs.out<span class="o">)</span> <span class="p">&amp;</span>lt<span class="p">;</span><span class="o">(</span>sort -k <span class="m">1</span> ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/errors.out<span class="o">)</span> <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	uniq <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	awk -v <span class="nv">OFS</span><span class="o">=</span>’, ‘ ‘<span class="nv">$2</span> <span class="p">&amp;</span>gt<span class="p">;</span> <span class="m">250</span> <span class="o">{</span>print <span class="nv">$1</span>, <span class="nv">$3</span>, <span class="nv">$2</span>, <span class="nv">$3</span>/<span class="nv">$2</span><span class="o">}</span>’ <span class="p">&amp;</span>gt<span class="p">;</span>  <span class="se">\</span>
</span><span class='line'>	./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/errors_abs.out
</span><span class='line'>cat ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/errors_abs.out <span class="p">|</span> sort -k <span class="m">4</span> -nr <span class="p">|</span> head&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;players-with-most-errors-per-at-bat----------&quot;</span>&gt;———PLAYERS WITH MOST ERRORS PER AT BAT———-&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;#pereh001, 8, 316, 0.0253165
</span><span class='line'><span class="c">#gurry001, 13, 537, 0.0242086</span>
</span><span class='line'><span class="c">#andre001, 9, 395, 0.0227848</span>
</span><span class='line'><span class="c">#casts001, 13, 593, 0.0219224</span>
</span><span class='line'><span class="c">#desmi001, 11, 555, 0.0198198</span>
</span><span class='line'><span class="c">#baezj001, 12, 606, 0.019802</span>
</span><span class='line'><span class="c">#garca003, 7, 356, 0.0196629</span>
</span><span class='line'><span class="c">#bogax001, 10, 512, 0.0195312</span>
</span><span class='line'><span class="c">#goldp001, 11, 593, 0.0185497</span>
</span><span class='line'><span class="c">#iglej001, 8, 432, 0.0185185</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>At-bats is great but even better is to remove strike-outs and just look at occurences when a player hit the ball into play.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> “———PLAYERS WITH MOST ERRORS PER BALL IN PLAY———-“
</span><span class='line'>cat ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/batters.out <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	grep -Ev ‘SF<span class="p">|</span>SH’ <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	grep -E ‘,<span class="o">(</span>S<span class="p">|</span>D<span class="p">|</span>T<span class="p">|</span>HR<span class="p">|</span><span class="o">[</span>0-9<span class="o">]</span><span class="p">|</span>E<span class="p">|</span>DGR<span class="p">|</span>FC<span class="o">)</span>’ <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	awk -F, ‘<span class="o">{</span>a<span class="o">[</span><span class="nv">$1</span><span class="o">]</span>++<span class="p">;</span><span class="o">}</span>END<span class="o">{</span><span class="k">for</span> <span class="o">(</span>i in a<span class="o">)</span>print i, a<span class="o">[</span>i<span class="o">]</span><span class="p">;</span><span class="o">}</span>’ <span class="p">&amp;</span>gt<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>	./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/bip.out
</span><span class='line'>join <span class="p">&amp;</span>lt<span class="p">;</span><span class="o">(</span>sort -k <span class="m">1</span> ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/bip.out<span class="o">)</span> <span class="p">&amp;</span>lt<span class="p">;</span><span class="o">(</span>sort -k <span class="m">1</span> ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/errors.out<span class="o">)</span> <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	uniq <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>	awk -v <span class="nv">OFS</span><span class="o">=</span>’, ‘ ‘<span class="nv">$2</span> <span class="p">&amp;</span>gt<span class="p">;</span> <span class="m">250</span> <span class="o">{</span>print <span class="nv">$1</span>, <span class="nv">$3</span>, <span class="nv">$2</span>, <span class="nv">$3</span>/<span class="nv">$2</span><span class="o">}</span>’ <span class="p">&amp;</span>gt<span class="p">;</span> <span class="se">\</span>
</span><span class='line'>	./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/errors_bip.out
</span><span class='line'>cat ./processed_data/<span class="k">${</span><span class="nv">YEAR</span><span class="k">}</span>/errors_bip.out <span class="p">|</span> sort -k <span class="m">4</span> -nr <span class="p">|</span> head&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1 <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;players-with-most-errors-per-ball-in-play----------&quot;</span>&gt;———PLAYERS WITH MOST ERRORS PER BALL IN PLAY———-&lt;/h1&gt;
</span><span class='line'>&lt;p&gt;#casts001, 13, 469, 0.0277186
</span><span class='line'><span class="c">#garca003, 7, 254, 0.0275591</span>
</span><span class='line'><span class="c">#gurry001, 13, 474, 0.0274262</span>
</span><span class='line'><span class="c">#andre001, 9, 329, 0.0273556</span>
</span><span class='line'><span class="c">#baezj001, 12, 439, 0.0273349</span>
</span><span class='line'><span class="c">#desmi001, 11, 409, 0.0268949</span>
</span><span class='line'><span class="c">#goldp001, 11, 420, 0.0261905</span>
</span><span class='line'><span class="c">#bogax001, 10, 411, 0.0243309</span>
</span><span class='line'><span class="c">#arcio002, 6, 261, 0.0229885</span>
</span><span class='line'><span class="c">#palkd001, 6, 264, 0.0227273</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Now that we’ve cleaned the data, I import it into a pandas dataframe (in python) and use a <a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.chisquare.html">chi-square test</a> to evaluate whether some players are more (or less) likely to hit into errors than other players. The null hypothesis is that all players are equally likely to hit into an error (note this test will never tell me who is more (or less) likely to hit into an error).</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">pandas</span> <span class="kn">as</span> <span class="nn">pd</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">scipy.stats</span> <span class="kn">import</span> <span class="n">chisquare</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">YEAR</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">DF</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="err">‘</span><span class="o">./</span><span class="n">processed_data</span><span class="o">/</span><span class="p">{}</span><span class="o">/</span><span class="n">errors_bip</span><span class="o">.</span><span class="n">out</span><span class="err">’</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">YEAR</span><span class="p">),</span>
</span><span class='line'>		 <span class="n">header</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
</span><span class='line'>		 <span class="n">names</span><span class="o">=</span><span class="p">[</span><span class="err">‘</span><span class="n">player</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">errors</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">bip</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">prop_error</span><span class="err">’</span><span class="p">])</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="nb">id</span><span class="o">=</span><span class="s">&quot;use-chi2-test-to-look-at-if-all-frequencies-are-equal&quot;</span><span class="o">&gt;</span><span class="n">use</span> <span class="n">chi2</span> <span class="n">test</span> <span class="n">to</span> <span class="n">look</span> <span class="n">at</span> <span class="k">if</span> <span class="nb">all</span> <span class="n">frequencies</span> <span class="n">are</span> <span class="err">“</span><span class="n">equal</span><span class="err">”</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">AVG_ERROR_RATE</span> <span class="o">=</span> <span class="n">DF</span><span class="p">[</span><span class="err">‘</span><span class="n">errors</span><span class="err">’</span><span class="p">]</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">*</span><span class="mf">1.</span> <span class="o">/</span> <span class="n">DF</span><span class="p">[</span><span class="err">‘</span><span class="n">bip</span><span class="err">’</span><span class="p">]</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">chisquare</span><span class="p">(</span><span class="n">DF</span><span class="p">[</span><span class="err">‘</span><span class="n">errors</span><span class="err">’</span><span class="p">],</span> <span class="n">f_exp</span><span class="o">=</span><span class="p">(</span><span class="n">DF</span><span class="p">[</span><span class="err">‘</span><span class="n">bip</span><span class="err">’</span><span class="p">]</span> <span class="o">*</span> <span class="n">AVG_ERROR_RATE</span><span class="p">)</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="nb">round</span><span class="p">)))</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="nb">id</span><span class="o">=</span><span class="s">&quot;powerdivergenceresultstatistic23904047619047623-pvalue019288665011608852&quot;</span><span class="o">&gt;</span><span class="n">Power_divergenceResult</span><span class="p">(</span><span class="n">statistic</span><span class="o">=</span><span class="mf">239.04047619047623</span><span class="p">,</span> <span class="n">pvalue</span><span class="o">=</span><span class="mf">0.19288665011608852</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>We failed to reject the null hypothesis. This means we have don’t have sufficient evidence to say that some players are more likely to hit into errors than others. Of course, we cannot accept the null hypothesis, but you can count this as a win for the score keepers.</p>

]]></content>
  </entry>
  
</feed>
